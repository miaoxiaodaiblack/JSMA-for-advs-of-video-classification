# import numpy as np
# a = [2, 1, 1, 3, 3, 1, 2, 1, 1, 1, 2, 3, 6, 1, 1, 1,
#      2, 7, 1, 1, 3, 1, 1, 1, 1, 5, 1, 1, 5, 1, 5, 3,
#      5, 3, 3, 4, 2, 1, 1, 1, 2, 2, 3, 4, 1, 10, 2, 1,
#      1, 5, 2, 1, 2, 1, 3, 2, 1, 1, 4, 1, 2, 1, 1, 3,
#      1, 1, 5, 7, 4, 4, 2, 1, 2, 1, 2, 11, 7, 2, 3, 1,
#      1, 5, 2, 6, 5, 1, 2, 3, 2, 4, 2, 6, 1, 3]
# # a.pop(1,2,3,9,10,11,12,13,14,15,16,17,20,21,24,25,26,27,28,29,30,31,32,34,39,40,41,42,43,44,47,48,49,50,54,56,59,60,61,62,63,66,67,69,70,72,73,76,78,79,80,82,83,84,89,90,91,92,93,94,95)
# # list = [1,2,3,8,9,10,11,12,13,14,15,16,17,20,21,24,25,26,27,28,29,30,31,32,34,39,40,41,42,43,44,47,48,49,50,51,54,56,59,60,61,62,63,66,67,69,70,72,73,76,78,79,80,82,83,84,89,90,91,92,93,94,95]
# # list = [3,8,10,11,13,15,20,24,25,26,27,34,39,40,41,42,43,44,47,48,49,54,56,59,61,62,63,67,69,70,72,76,78,79,80,82,83,84,89,90,91,92,93]
# # list = [8,20,54,63]
# # list = [20,54,63]
# # for i in range (len(list)):
# #     a[list[i]]=0
# # for i in range(4):
# #     a.insert(25, -1)
# blist=[]
# timelist = [9.71788, 30.042178100000008, 3.673132299999992, 34.70055350000001, 12.593824100000006, 10.637426199999993, 1.6136525999999662, 0.954935799999987, 2.628699200000028, 9.53372680000001, 11.304243799999995, 63.2264457, 113.51931860000002, 0.64511959999993, 0.6562912999999071, 1.3209347000000662, 7.918098400000076, 29.723489599999994, 63.6511041, 6.096817699999974, 113.11204040000007, 4.387637999999924, 25.828291799999988, 0.6430493000000297, 2.6838952999999037, 24.084650999999894, 0.9549673000001349, 29.84388399999989, 0.9895919999999023, 12.229099299999916, 108.06392490000007, 4.412929100000156, 14.617937799999936, 4.508510099999967, 3.782252799999924, 31.849152099999856, 8.642493699999932, 14.679890099999966, 2.33415140000011, 0.6478664999999637, 1.6481966000001194, 0.6168147000003046, 17.10991630000035, 10.417915699999867, 7.289277399999719, 0.6379095000002053, 28.213156499999968, 17.149888400000236, 10.525339299999814, 7.192896300000029, 0.6183356999999887, 277.9779722000003, 22.17595259999962, 0.9701173999997081, 1.0040173000002142, 30.657034100000146, 9.067764500000067, 5.158708099999785, 5.865148099999715, 24.539848800000073, 19.380050599999777, 1.9966676999997617, 11.492739299999812, 1.6640677999998843, 9.75444540000035, 2.0685676000002786, 17.965565399999832, 43.121845499999836, 2.273587099999986, 27.01133579999987, 0.6203629000001456, 0.9925410000000738, 26.302286000000095, 200.66722320000008, 102.59014549999984, 5.456158599999981, 6.142979500000365, 1.6794285999994827, 1.0123085000004721, 1.9862251000004107, 7.600730999999541, 36.16111929999988, 81.9072256999998, 22.482768199999555, 38.31416640000043, 3.8162869999996474, 8.658122200000435, 102.50147330000073, 1.0128080000004047, 89.49686460000066, 13.001025100000334, 0.6208120999999664, 4.002459000000272, 20.026869599999372, 23.898456899999474, 20.526174800000263, 12.390315399999963, 379.2780620000003, 1.6968891999995321,17.247673699999723]
# difflist= [0.00283701, 0.01039339, 0.00118175, 0.01097965, 0.00419822, 0.00329459, 0.0004727, 0.00023635, 0.00080081, 0.00247565, 0.0031394, 0.01577711, 0.02211056, 0.00011818, 0.00011818, 0.00032208, 0.00210257, 0.00919954, 0.01577711, 0.00170079, 0.02211056, 0.00138334, 0.0079986, 0.00011818, 0.00081888, 0.00602233, 0.00023635, 0.0066388, 0.00023635, 0.0027097, 0.0238857, 0.00135368, 0.00408141, 0.00138519, 0.00114838, 0.00673966, 0.00245253, 0.00474414, 0.00070905, 0.00011818, 0.0004727, 0.00011818, 0.00389463, 0.00310637,
#            0.00230371, 0.00011818,0.00764842,0.00389463,0.00310637,0.00230371,0.00011818,0.05536087,0.00614419,0.00023635,0.00023635,0.00851191,0.0023482,0.00147973,0.00185186,0.00646947,0.00488701,0.00059088,0.00359806,0.00045694,0.00308691,0.00058253,0.00390813,0.00850724,0.00070905,0.00640175,0.00011818,0.00022013,0.00754112,0.03836486,0.01691181,0.00168649,0.00195521,0.00041616,0.00023635,0.00058021,0.00179294,0.01049038,0.02534283,0.0068992,0.01160601,0.00108905,0.00187921,0.02132767,0.00023635,0.02416536,0.00359593,0.00011818,0.00121419,0.00654048,0.00694244,0.00617814,0.00307021,0.07113716,0.00308691]
# diffnumlist= [82, 330, 38, 304, 135, 107, 20, 9, 27, 98, 91, 283, 755, 5, 5, 12, 64, 319, 283, 59, 755, 43, 129, 5, 21, 187, 9, 210, 8, 72, 630, 44, 129, 46, 47, 202, 52, 164, 28, 5, 19, 5, 129, 93, 72, 5, 226, 129, 93, 72, 5, 1063, 180, 8, 9, 232, 84, 45, 49, 187, 150, 21, 129, 15, 94, 18, 96, 336, 24, 114, 5, 9, 178, 1169, 582, 58, 65, 16, 10, 16, 43, 410, 513, 252, 382, 29, 61, 697, 10, 855, 45, 5, 47, 234, 167, 145, 53, 2532, 19, 252]
# epochlist = [25, 88, 10, 101, 36, 30, 4, 2, 7, 27, 32, 179, 328, 1, 1, 3, 22, 84, 179, 17, 328, 12, 74, 1, 7, 68, 2, 84, 2, 34, 282, 12, 41, 12, 10, 92, 24, 41, 6, 1, 4, 1, 48, 29, 20, 1, 80, 48, 29, 20, 1, 793, 63, 2, 2, 87, 25, 14, 16, 70, 55, 5, 32, 4, 28, 5, 51, 124, 6, 78, 1, 2, 75, 582, 295, 15, 17, 4, 2, 5, 21, 103, 234, 64, 111, 10, 24, 294, 2, 254, 37, 1, 11, 58, 69, 59, 35, 1097, 4,48]
# epochtotallist = [0]*17
# timetotallist = [0]*17
# difftotallist = [0]*17
# diffnumtotallist = [0]*17
# for i in range (1,17):
#     b = np.where(np.array(a)==i)
#     blist.append(b[0].size)
#     # b = list(b)
#     if (b[0].size != 0):
#         for j in range (b[0].size):
#             timetotallist[i] = timetotallist[i]+timelist[b[0][j]]
#             difftotallist[i] = difftotallist[i]+difflist[b[0][j]]
#             diffnumtotallist[i] = diffnumtotallist[i]+diffnumlist[b[0][j]]
#             epochtotallist[i] = epochtotallist[i]+epochlist[b[0][j]]
#     # print('timetotallist', timetotallist)
#     # print('difftotallist', difftotallist)
#     # print('diffnumtotallist', diffnumtotallist)
#     # if (b[0].size != 0):
#     #     # timetotallist[i] = timetotallist[i]/b[0].size
#     #     # difftotallist[i] = (difftotallist[i]/b[0].size)*255
#     #     # diffnumtotallist[i] = diffnumtotallist[i]/b[0].size
#     #     timetotal = np.sum(timetotallist)/np.sum(blist)
#     #     # difftotal = (np.sum(difftotallist)/np.sum(blist))*255
#     #     diffnum = np.sum(diffnumtotallist)/np.sum(blist)
# print('b',(100-(len(list)))/100)
# print('timetotal',timetotal)
# print('difftotal',difftotal)
# print('diffnum',diffnum)
# # timetotal = 0
# # for i in range(len(timetotallist)):
# #     timetotal = timetotallist[i]+timetotal
# print('blist',blist)
# print('timetotallist',timetotallist[: :-1])
# print('difftotallist',difftotallist[: :-1])
# print('diffnumtotallist',diffnumtotallist[: :-1])





from config import parse_opts
import os
opt = parse_opts()
# list = [1,2,3,5,7,10]
# list = [100,300,500,1000,1500,2000]
# for i in range(len(list)):
#     nl = list[i]
path = 'E:/JSMA/video-classification-3d-cnn-pytorch-master/resultslic_c3d_101_black/'
# txt_path = 'E:/hmdb51_org/testlist01.txt'
txt_path = 'E:/JSMA/video-classification-3d-cnn-pytorch-master/txtUCF101/all2.txt'
# txt_path = 'E:/JSMA/video-classification-3d-cnn-pytorch-master/txtUCF101/right101.txt'

# txt_path = 'E:/JSMA/video-classification-3d-cnn-pytorch-master/txthmdb51/allright.txt'
# os.system('python testvaluex-c3d.py --save_path %s --txt_path %s --maxe 1500 --n 5 --alpha 0.05 --k 500 --data UCF101 --slic 0 --black 0'%(path,txt_path))
# os.system('python testvaluex-lrcn.py --save_path %s --txt_path %s --maxe 1500 --n 3 --alpha 0.03 --k 1000 --data UCF101 --slic 0Figure \ref{fig_framework} overviews the proposed method. '%(path,txt_path))
# os.system('python testC3D.py --save_path %s --txt_path %s --maxe 1500 --n 5 --alpha 0.05 --k 500 --data UCF101 --slic 0 --black 0'%(path,txt_path))
os.system('python testvaluex-c3d.py --save_path %s --txt_path %s --maxe 8000 --n 5 --alpha 0.05   --data UCF101 --slic 1 --black 1 --k 500'%(path,txt_path))
#os.system('python testvaluex-c3d.py --save_path %s --txt_path %s --maxe 1500 --n 3 --alpha 0.05 --data UCF101 --slic 0 --black 1'%(path,txt_path))

#os.system('python testvaluex-c3d.py --save_path %s --txt_path %s --maxe 800 --n 3 --alpha 0.03 --k 500 --data UCF101 --slic 0 --black 1'%(path,txt_path))